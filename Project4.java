/* Project4.java
 * Jonathan Mainhart - CMIS 242
 * 09 October 2020
 *
 * GUI interface accepts information about a property which is used to create 
 * instances of Property objects that are stored in a TreeMap. The user entered
 * transaction number acts as the key for the TreeMap for insertion, deletion,
 * and searching. The program displays messages to the user in response to 
 * user actions.
 *
 */
package mainhart;

import java.util.TreeMap;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author jonmainhart
 */
public class Project4 extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form Project4
     */
    public Project4() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        transactionNoLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        bedroomLabel = new javax.swing.JLabel();
        sqFtLabel = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        transactionNoField = new javax.swing.JTextField();
        addressField = new javax.swing.JTextField();
        bedroomField = new javax.swing.JTextField();
        sqFtField = new javax.swing.JTextField();
        priceField = new javax.swing.JTextField();
        processButton = new javax.swing.JButton();
        changeStatusButton = new javax.swing.JButton();
        processSelectionComboBox = new javax.swing.JComboBox<>();
        statusSelectionComboBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Real Estate Database");

        transactionNoLabel.setText("Transaction No:");

        addressLabel.setText("Address:");

        bedroomLabel.setText("Bedrooms:");

        sqFtLabel.setText("Square Footage:");

        priceLabel.setText("Price:");

        processButton.setText("Process");
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processButtonActionPerformed(evt);
            }
        });

        changeStatusButton.setText("Change Status");
        changeStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeStatusButtonActionPerformed(evt);
            }
        });

        processSelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insert", "Delete", "Find" }));

        statusSelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FOR_SALE", "UNDER_CONTRACT", "SOLD" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bedroomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bedroomField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sqFtLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sqFtField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(priceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(transactionNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addressField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(transactionNoField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(changeStatusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusSelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(processSelectionComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addressLabel, bedroomLabel, priceLabel, sqFtLabel});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addressField, bedroomField, priceField, processSelectionComboBox, sqFtField, statusSelectionComboBox, transactionNoField});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {changeStatusButton, processButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(transactionNoLabel))
                    .addComponent(transactionNoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(addressLabel))
                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(bedroomLabel))
                    .addComponent(bedroomField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(sqFtLabel))
                    .addComponent(sqFtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(priceLabel))
                    .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(processButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(processSelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(changeStatusButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(statusSelectionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void processButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processButtonActionPerformed
        /* Button click performs the action selected by the user in the 
           processSelectionComboBox to the right of the button. User will 
           be alerted if the required fields are not filled or are impropperly 
           filled. The user will also be alerted if the selected record is not
           found.
         */

        try {
            // parse transaction number from user input
            setTransNum();

            switch (processSelectionComboBox.getSelectedIndex()) {

                case 0: // INSERT RECORD

                    // check if record already exists
                    if (checkForRecord(transNum)) {

                        // error message
                        sendUserMessage("Record " + transNum + " already exists!\n"
                                + "Try another Transaction Number.");

                    } else { // if record does not exist

                        // insert the key value pair
                        propertyDatabase.put(transNum,
                                new Property(addressField.getText(),
                                        Integer.parseInt(bedroomField.getText()),
                                        Integer.parseInt(sqFtField.getText()),
                                        Integer.parseInt(priceField.getText())));

                        // validate and alert user
                        if (checkForRecord(transNum)) {

                            sendUserMessage("Record Created Successfully!");
                            clearFields();

                        } else { // if something weird happens...

                            sendUserMessage("Something went wrong and the record "
                                    + "was not created.\nIt's not you, it's me.\n"
                                    + "Try again later.");

                        }
                    }
                    break;

                case 1: // DELETE RECORD

                    if (checkForRecord(transNum)) { // verify record exists

                        propertyDatabase.remove(transNum); // remove the mapping

                        // validate the record is gone and alert the user
                        if (!checkForRecord(transNum)) {

                            sendUserMessage("Record Successfully Deleted!");
                            clearFields();

                        } else { // if something weird happens...

                            sendUserMessage("Something went wrong and the record "
                                    + "was not deleted.\nDid you say please?\n"
                                    + "Try again later.");
                        }

                    } else {

                        sendUserMessage(RECORD_NOT_FOUND);
                    }

                    break;

                case 2: // FIND RECORD

                    // verify record exists
                    if (!checkForRecord(transNum)) {

                        // error message
                        sendUserMessage(RECORD_NOT_FOUND);

                    } else {

                        // display the property record
                        sendUserMessage(propertyDatabase.get(transNum).toString());
                        clearFields();

                    }
                    break;

                default:

                    sendUserMessage("You somehow managed to make an invalid"
                            + " choice.\nTry not to break anything else.");
                    break;

            } // end switch

        } catch (NumberFormatException nfe) {

            // error to the console
            System.out.println("Exception Thrown: " + nfe.getMessage());
            // popup user message
            sendUserMessage("Transaction Number, Bedrooms, Square Footage, and "
                    + "Price must be whole numbers.");
        }

    }//GEN-LAST:event_processButtonActionPerformed
// end processButtonActionPerformed


    private void changeStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeStatusButtonActionPerformed
        /* Button clicked changes the status of the Property object mapped to
           the user entered transaction number to the status selected from the 
           statusSelectionComboBox to the right and displays a message if
           successful. Alerts user if the selected record is not found or if
           the required field is not filled or is improperly filled.
         */

        try {

            setTransNum();
            // check if record exists
            if (checkForRecord(transNum)) {
                switch (statusSelectionComboBox.getSelectedIndex()) {

                    case 0: // FOR_SALE
                        propertyDatabase.get(transNum).changeState(Status.FOR_SALE);
                        sendUserMessage("Record Number " + transNum
                                + " Status changed to FOR_SALE");
                        clearFields();
                        break;

                    case 1: // UNDER_CONTRACT
                        propertyDatabase.get(transNum).changeState(Status.UNDER_CONTRACT);
                        sendUserMessage("Record Number " + transNum
                                + " Status changed to UNDER_CONTRACT");
                        clearFields();
                        break;

                    case 2: // SOLD
                        propertyDatabase.get(transNum).changeState(Status.SOLD);
                        sendUserMessage("Record Number " + transNum
                                + " Status changed to SOLD");
                        clearFields();
                        break;

                    default:
                        sendUserMessage("You somehow managed to make an invalid"
                                + " choice.\nTry not to break anything else.");
                        break;
                } // end switch

            } else {

                sendUserMessage(RECORD_NOT_FOUND);
            }

        } catch (NumberFormatException nfe) {
            System.out.println("Exception Thrown: " + nfe.getMessage());
            sendUserMessage("Transaction Number must be a whole number.");
        }
    }//GEN-LAST:event_changeStatusButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Project4.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Project4.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Project4.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Project4.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Project4().setVisible(true);
        });
    }

    // private method to set transaction number for use in button action methods
    private void setTransNum() {
        transNum = Integer.parseInt(transactionNoField.getText());
    }

    // private method to check if record exists
    private boolean checkForRecord(int transactionNumber) {
        return propertyDatabase.containsKey(transactionNumber);
    }

    // private method to generate pop-up
    private void sendUserMessage(String message) {
        JFrame frame = new JFrame();
        JOptionPane.showMessageDialog(frame, message);
    }

    // private method to clear the input fields for the user
    private void clearFields() {
        transactionNoField.setText("");
        addressField.setText("");
        bedroomField.setText("");
        sqFtField.setText("");
        priceField.setText("");
    }

    // variable to hold the user entered transaction number
    private int transNum;
    
    private final String RECORD_NOT_FOUND = "Record Does Not Exist.\nTry Another Record.";

// database to hold all instances of Property Class
    private final TreeMap<Integer, Property> propertyDatabase = new TreeMap<>();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField bedroomField;
    private javax.swing.JLabel bedroomLabel;
    private javax.swing.JButton changeStatusButton;
    private javax.swing.JTextField priceField;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JButton processButton;
    private javax.swing.JComboBox<String> processSelectionComboBox;
    private javax.swing.JTextField sqFtField;
    private javax.swing.JLabel sqFtLabel;
    private javax.swing.JComboBox<String> statusSelectionComboBox;
    private javax.swing.JTextField transactionNoField;
    private javax.swing.JLabel transactionNoLabel;
    // End of variables declaration//GEN-END:variables
}
